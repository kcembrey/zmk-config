/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

#define BASE 0
#define LOWER 1
#define RAISE 2
#define ADJUST 3

/ {
    // Activate ADJUST layer by pressing raise and lower

    conditional_layers {
        compatible = "zmk,conditional-layers";

        adjust_layer {
            if-layers = <LOWER RAISE>;
            then-layer = <ADJUST>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "default";

            // ------------------------------------------------------------------------------------------------------------
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |       |
            // |  ESC  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   | BKSPC |
            // |  TAB  |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |  MUTE  |  |       |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //               | GUI | ALT  | CTRL | LOWER|  ENTER |  | SPACE | RAISE| CTRL  | ALT   | GUI  |

            bindings = <
&kp EQUAL       &kp N1  &kp N2  &kp N3    &kp N4     &kp N5                          &kp N6    &kp N7     &kp N8     &kp N9   &kp N0    &kp MINUS
&kp TAB         &kp Q   &kp W   &kp E     &kp R      &kp T                           &kp Y     &kp U      &kp I      &kp O    &kp P     &kp SQT
&kp LEFT_SHIFT  &kp A   &kp S   &kp D     &kp F      &kp G                           &kp H     &kp J      &kp K      &kp L    &kp SEMI  &kp RIGHT_SHIFT
&kp ESC         &kp Z   &kp X   &kp C     &kp V      &kp B      &mo 1       &mo 2    &kp N     &kp M      &kp COMMA  &kp DOT  &kp FSLH  &kp BSLH
                        &mo 1   &kp BSPC  &kp SPACE  &kp LCTRL  &kp LGUI    &kp DEL  &kp LALT  &kp SPACE  &kp RET    &mo 2
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        lower_layer {
            display-name = "lower";

            // TODO: Some binds are waiting for shifted keycode support.
            // ------------------------------------------------------------------------------------------------------------
            // |       |  F1 |  F2 |  F3  |  F4  |  F5  |                   |  F6  |  F7   |  F8   |  F9  |  F10  |  F11  |
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |  F12  |
            // |       |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   |   |
            // |       |  =  |  -  |  +   |  {   |  }   |        |  |       |  [   |  ]    |  ;    |  :   |   \   |       |
            //               |     |      |      |      |        |  |       |      |       |       |      |

            bindings = <
&kp TILDE       &kp F1     &kp F2         &kp F3             &kp F4     &kp F5                                  &kp F6                 &kp F7           &kp F8           &kp F9           &kp F10          &kp PAGE_UP
&sys_reset      &kp TILDE  &kp AMPERSAND  &kp ASTERISK       &kp PIPE   &kp LEFT_BRACKET                        &kp RIGHT_BRACKET      &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp KP_SUBTRACT  &kp HOME
&kp LPAR        &kp EXCL   &kp DOLLAR     &kp PERCENT        &kp CARET  &kp LEFT_PARENTHESIS                    &kp RIGHT_PARENTHESIS  &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp KP_PLUS      &kp END
&kp KP_NUMLOCK  &kp UNDER  &kp EXCL       &kp AT             &kp HASH   &kp LEFT_BRACE        &trans    &trans  &kp RIGHT_BRACE        &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp KP_DOT       &kp PAGE_DOWN
                           &trans         &kp RIGHT_CONTROL  &trans     &trans                &mo 3     &trans  &trans                 &trans           &kp RIGHT_ALT    &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        raise_layer {
            display-name = "raise";

            // ------------------------------------------------------------------------------------------------------------
            // | BTCLR | BT1  | BT2  |  BT3  |  BT4  |  BT5 |                |      |      |       |      |       |       |
            // |       | INS  | PSCR | GUI   |       |      |                | PGUP |      |   ^   |      |       |       |
            // |       | ALT  | CTRL | SHIFT |       | CAPS |                | PGDN |   <- |   v   |  ->  |  DEL  | BKSPC |
            // |       | UNDO | CUT  | COPY  | PASTE |      |      |  |      |      |      |       |      |       |       |
            //                |      |       |       |      |      |  |      |      |      |       |      |

            bindings = <
&bt BT_CLR         &bt BT_SEL 0     &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                    &trans             &trans          &trans      &trans            &trans            &trans
&sys_reset         &rgb_ug RGB_BRI  &kp PSCRN     &kp UP        &trans        &trans                          &kp PG_UP          &kp KP_NUMLOCK  &kp UP      &kp SCROLLLOCK    &kp PRINTSCREEN   &trans
&trans             &rgb_ug RGB_BRD  &kp LEFT      &kp DOWN      &kp RIGHT     &kp CLCK                        &kp C_VOLUME_UP    &kp LEFT        &kp DOWN    &kp RIGHT         &kp K_CALCULATOR  &kp C_BRIGHTNESS_INC
&ext_power EP_TOG  &rgb_ug RGB_TOG  &kp K_CUT     &kp K_COPY    &kp K_PASTE   &trans        &trans    &trans  &kp C_VOLUME_DOWN  &kp K_PREVIOUS  &kp K_NEXT  &kp K_PLAY_PAUSE  &kp K_MUTE        &kp C_BRIGHTNESS_DEC
                                    &trans        &trans        &trans        &trans        &trans    &trans  &trans             &trans          &trans      &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        adjust_layer {
            // ----------------------------------------------------------------------------------------------------------------------------
            // | BTCLR  |  BT1    |  BT2    |   BT3   |   BT4   |   BT5   |                  |      |      |       |      |       |       |
            // | EXTPWR | RGB_HUD | RGB_HUI | RGB_SAD | RGB_SAI | RGB_EFF |                  |      |      |       |      |       |       |
            // |        | RGB_BRD | RGB_BRI |         |         |         |                  |      |      |       |      |       |       |
            // |        |         |         |         |         |         | RGB_TOG | |      |      |      |       |      |       |       |
            //                    |         |         |         |         |         | |      |      |      |       |      |

            display-name = "adjust";
            bindings = <
&kp ESCAPE  &kp N1            &kp N2  &kp N3     &kp N4     &kp N5                    &kp N6    &kp N7     &kp N8     &kp N9   &kp N0    &kp MINUS
&kp T       &kp TAB           &kp Q   &kp W      &kp E      &kp R                     &kp Y     &kp U      &kp I      &kp O    &kp P     &kp SQT
&kp G       &kp LEFT_SHIFT    &kp A   &kp S      &kp D      &kp F                     &kp H     &kp J      &kp K      &kp L    &kp SEMI  &kp RIGHT_SHIFT
&kp B       &kp LEFT_CONTROL  &kp Z   &kp X      &kp C      &kp V   &to 0    &to 1    &kp N     &kp M      &kp COMMA  &kp DOT  &kp FSLH  &kp BSLH
                              &mo 1   &kp SPACE  &kp SPACE  &kp B   &kp T    &kp DEL  &kp LALT  &kp SPACE  &kp RET    &mo 2
            >;
        };
    };
};
